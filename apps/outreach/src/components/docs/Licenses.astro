---
import { licenses } from '@opendatacapture/licenses';
import type { ApprovedLicense } from '@opendatacapture/licenses';

const approvedLicenseIds: ApprovedLicense[] = [
  '0BSD',
  'Apache-2.0',
  'BSD-1-Clause',
  'BSD-2-Clause',
  'BSD-3-Clause',
  'CC0-1.0',
  'ISC',
  'MIT',
  'MIT-0',
  'Unlicense',
  'WTFPL'
];

const openApprovedLicenses = Array.from(licenses.entries())
  .filter(([id]) => approvedLicenseIds.includes(id as any))
  .map(([id, license]) => ({ id, ...license }))
  .sort((a, b) => a.name.localeCompare(b.name));

const openNonApprovedLicenses = Array.from(licenses.entries())
  .filter(([id, license]) => !approvedLicenseIds.includes(id as any) && license.isOpenSource && license.isCopyleft)
  .map(([id, license]) => ({ id, ...license }))
  .sort((a, b) => a.name.localeCompare(b.name));

const openUnreviewedLicenses = Array.from(licenses.entries())
  .filter(([id, license]) => !approvedLicenseIds.includes(id as any) && license.isOpenSource && !license.isCopyleft)
  .map(([id, license]) => ({ id, ...license }))
  .sort((a, b) => a.name.localeCompare(b.name));

const proprietaryLicenses = Array.from(licenses.entries())
  .filter(([id, license]) => !license.isOpenSource)
  .map(([id, license]) => ({ id, ...license }))
  .sort((a, b) => a.name.localeCompare(b.name));
---

<div class="space-y-8">
  <section>
    <h3>Open Source Licenses (Approved)</h3>
    <p class="mb-4 text-slate-700">
      The following licenses are pre-approved for direct inclusion in the Open Data Capture repository and public
      distribution:
    </p>
    <ul class="tracking-tight">
      {
        openApprovedLicenses.map((license) => (
          <li>
            <a
              class="font-bold hover:underline"
              target="_blank"
              rel="noopener noreferrer"
              href={license.reference}
              style="text-decoration-line: none;"
            >
              {license.name}
            </a>
          </li>
        ))
      }
    </ul>
    <p class="text-slate-700">Please note that instruments in the public domain instruments are also permitted.</p>
  </section>
  <section>
    <h3>Open Source Licenses (Non-Approved)</h3>
    <p class="mb-4 text-slate-700">
      These open source licenses are acceptable for public distribution, but due to various clauses are not able to be
      included directly in the Open Data Capture repository.
    </p>
    <ul class="tracking-tight">
      {
        openNonApprovedLicenses.map((license) => (
          <li>
            <a
              class="font-bold hover:underline"
              target="_blank"
              rel="noopener noreferrer"
              href={license.reference}
              style="text-decoration-line: none;"
            >
              {license.name}
            </a>
          </li>
        ))
      }
    </ul>
  </section>
  <section>
    <h3>Open Source Licenses (Review Required)</h3>
    <p class="mb-4 text-slate-700">
      The following licenses are considered open source, but have not been reviewed by our team.
    </p>
    <ul class="tracking-tight">
      {
        openUnreviewedLicenses.map((license) => (
          <li>
            <a
              class="font-bold hover:underline"
              target="_blank"
              rel="noopener noreferrer"
              href={license.reference}
              style="text-decoration-line: none;"
            >
              {license.name}
            </a>
          </li>
        ))
      }
    </ul>
  </section>
  <section>
    <h3>Proprietary and Non-Free Licenses</h3>
    <p class="mb-4 text-slate-700">
      These licenses may not be published publicly by our team. This list includes non-free licenses, as well as any
      licenses with restrictions on commercial use.
    </p>
    <ul class="tracking-tight">
      {
        proprietaryLicenses.map((license) => (
          <li>
            <a
              class="font-bold hover:underline"
              target="_blank"
              rel="noopener noreferrer"
              href={license.reference}
              style="text-decoration-line: none;"
            >
              {license.name}
            </a>
          </li>
        ))
      }
    </ul>
  </section>
</div>
