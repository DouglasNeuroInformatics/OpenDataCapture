/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SetupRouteImport } from './routes/setup'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AppUserRouteImport } from './routes/_app/user'
import { Route as AppDashboardRouteImport } from './routes/_app/dashboard'
import { Route as AppContactRouteImport } from './routes/_app/contact'
import { Route as AppAboutRouteImport } from './routes/_app/about'
import { Route as AppUploadIndexRouteImport } from './routes/_app/upload/index'
import { Route as AppDatahubIndexRouteImport } from './routes/_app/datahub/index'
import { Route as AppUploadInstrumentIdRouteImport } from './routes/_app/upload/$instrumentId'
import { Route as AppSessionStartSessionRouteImport } from './routes/_app/session/start-session'
import { Route as AppInstrumentsAccessibleInstrumentsRouteImport } from './routes/_app/instruments/accessible-instruments'
import { Route as AppGroupManageRouteImport } from './routes/_app/group/manage'
import { Route as AppAdminSettingsRouteImport } from './routes/_app/admin/settings'
import { Route as AppDatahubSubjectIdRouteRouteImport } from './routes/_app/datahub/$subjectId/route'
import { Route as AppAdminUsersIndexRouteImport } from './routes/_app/admin/users/index'
import { Route as AppAdminGroupsIndexRouteImport } from './routes/_app/admin/groups/index'
import { Route as AppInstrumentsRenderIdRouteImport } from './routes/_app/instruments/render/$id'
import { Route as AppDatahubSubjectIdTableRouteImport } from './routes/_app/datahub/$subjectId/table'
import { Route as AppDatahubSubjectIdGraphRouteImport } from './routes/_app/datahub/$subjectId/graph'
import { Route as AppDatahubSubjectIdAssignmentsRouteImport } from './routes/_app/datahub/$subjectId/assignments'
import { Route as AppAdminUsersCreateRouteImport } from './routes/_app/admin/users/create'
import { Route as AppAdminGroupsCreateRouteImport } from './routes/_app/admin/groups/create'

const SetupRoute = SetupRouteImport.update({
  id: '/setup',
  path: '/setup',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppUserRoute = AppUserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppContactRoute = AppContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAboutRoute = AppAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppUploadIndexRoute = AppUploadIndexRouteImport.update({
  id: '/upload/',
  path: '/upload/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDatahubIndexRoute = AppDatahubIndexRouteImport.update({
  id: '/datahub/',
  path: '/datahub/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppUploadInstrumentIdRoute = AppUploadInstrumentIdRouteImport.update({
  id: '/upload/$instrumentId',
  path: '/upload/$instrumentId',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppSessionStartSessionRoute = AppSessionStartSessionRouteImport.update({
  id: '/session/start-session',
  path: '/session/start-session',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppInstrumentsAccessibleInstrumentsRoute =
  AppInstrumentsAccessibleInstrumentsRouteImport.update({
    id: '/instruments/accessible-instruments',
    path: '/instruments/accessible-instruments',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppGroupManageRoute = AppGroupManageRouteImport.update({
  id: '/group/manage',
  path: '/group/manage',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAdminSettingsRoute = AppAdminSettingsRouteImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDatahubSubjectIdRouteRoute =
  AppDatahubSubjectIdRouteRouteImport.update({
    id: '/datahub/$subjectId',
    path: '/datahub/$subjectId',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppAdminUsersIndexRoute = AppAdminUsersIndexRouteImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAdminGroupsIndexRoute = AppAdminGroupsIndexRouteImport.update({
  id: '/admin/groups/',
  path: '/admin/groups/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppInstrumentsRenderIdRoute = AppInstrumentsRenderIdRouteImport.update({
  id: '/instruments/render/$id',
  path: '/instruments/render/$id',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDatahubSubjectIdTableRoute =
  AppDatahubSubjectIdTableRouteImport.update({
    id: '/table',
    path: '/table',
    getParentRoute: () => AppDatahubSubjectIdRouteRoute,
  } as any)
const AppDatahubSubjectIdGraphRoute =
  AppDatahubSubjectIdGraphRouteImport.update({
    id: '/graph',
    path: '/graph',
    getParentRoute: () => AppDatahubSubjectIdRouteRoute,
  } as any)
const AppDatahubSubjectIdAssignmentsRoute =
  AppDatahubSubjectIdAssignmentsRouteImport.update({
    id: '/assignments',
    path: '/assignments',
    getParentRoute: () => AppDatahubSubjectIdRouteRoute,
  } as any)
const AppAdminUsersCreateRoute = AppAdminUsersCreateRouteImport.update({
  id: '/admin/users/create',
  path: '/admin/users/create',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAdminGroupsCreateRoute = AppAdminGroupsCreateRouteImport.update({
  id: '/admin/groups/create',
  path: '/admin/groups/create',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/setup': typeof SetupRoute
  '/about': typeof AppAboutRoute
  '/contact': typeof AppContactRoute
  '/dashboard': typeof AppDashboardRoute
  '/user': typeof AppUserRoute
  '/auth/login': typeof AuthLoginRoute
  '/': typeof AppIndexRoute
  '/datahub/$subjectId': typeof AppDatahubSubjectIdRouteRouteWithChildren
  '/admin/settings': typeof AppAdminSettingsRoute
  '/group/manage': typeof AppGroupManageRoute
  '/instruments/accessible-instruments': typeof AppInstrumentsAccessibleInstrumentsRoute
  '/session/start-session': typeof AppSessionStartSessionRoute
  '/upload/$instrumentId': typeof AppUploadInstrumentIdRoute
  '/datahub': typeof AppDatahubIndexRoute
  '/upload': typeof AppUploadIndexRoute
  '/admin/groups/create': typeof AppAdminGroupsCreateRoute
  '/admin/users/create': typeof AppAdminUsersCreateRoute
  '/datahub/$subjectId/assignments': typeof AppDatahubSubjectIdAssignmentsRoute
  '/datahub/$subjectId/graph': typeof AppDatahubSubjectIdGraphRoute
  '/datahub/$subjectId/table': typeof AppDatahubSubjectIdTableRoute
  '/instruments/render/$id': typeof AppInstrumentsRenderIdRoute
  '/admin/groups': typeof AppAdminGroupsIndexRoute
  '/admin/users': typeof AppAdminUsersIndexRoute
}
export interface FileRoutesByTo {
  '/setup': typeof SetupRoute
  '/about': typeof AppAboutRoute
  '/contact': typeof AppContactRoute
  '/dashboard': typeof AppDashboardRoute
  '/user': typeof AppUserRoute
  '/auth/login': typeof AuthLoginRoute
  '/': typeof AppIndexRoute
  '/datahub/$subjectId': typeof AppDatahubSubjectIdRouteRouteWithChildren
  '/admin/settings': typeof AppAdminSettingsRoute
  '/group/manage': typeof AppGroupManageRoute
  '/instruments/accessible-instruments': typeof AppInstrumentsAccessibleInstrumentsRoute
  '/session/start-session': typeof AppSessionStartSessionRoute
  '/upload/$instrumentId': typeof AppUploadInstrumentIdRoute
  '/datahub': typeof AppDatahubIndexRoute
  '/upload': typeof AppUploadIndexRoute
  '/admin/groups/create': typeof AppAdminGroupsCreateRoute
  '/admin/users/create': typeof AppAdminUsersCreateRoute
  '/datahub/$subjectId/assignments': typeof AppDatahubSubjectIdAssignmentsRoute
  '/datahub/$subjectId/graph': typeof AppDatahubSubjectIdGraphRoute
  '/datahub/$subjectId/table': typeof AppDatahubSubjectIdTableRoute
  '/instruments/render/$id': typeof AppInstrumentsRenderIdRoute
  '/admin/groups': typeof AppAdminGroupsIndexRoute
  '/admin/users': typeof AppAdminUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/setup': typeof SetupRoute
  '/_app/about': typeof AppAboutRoute
  '/_app/contact': typeof AppContactRoute
  '/_app/dashboard': typeof AppDashboardRoute
  '/_app/user': typeof AppUserRoute
  '/auth/login': typeof AuthLoginRoute
  '/_app/': typeof AppIndexRoute
  '/_app/datahub/$subjectId': typeof AppDatahubSubjectIdRouteRouteWithChildren
  '/_app/admin/settings': typeof AppAdminSettingsRoute
  '/_app/group/manage': typeof AppGroupManageRoute
  '/_app/instruments/accessible-instruments': typeof AppInstrumentsAccessibleInstrumentsRoute
  '/_app/session/start-session': typeof AppSessionStartSessionRoute
  '/_app/upload/$instrumentId': typeof AppUploadInstrumentIdRoute
  '/_app/datahub/': typeof AppDatahubIndexRoute
  '/_app/upload/': typeof AppUploadIndexRoute
  '/_app/admin/groups/create': typeof AppAdminGroupsCreateRoute
  '/_app/admin/users/create': typeof AppAdminUsersCreateRoute
  '/_app/datahub/$subjectId/assignments': typeof AppDatahubSubjectIdAssignmentsRoute
  '/_app/datahub/$subjectId/graph': typeof AppDatahubSubjectIdGraphRoute
  '/_app/datahub/$subjectId/table': typeof AppDatahubSubjectIdTableRoute
  '/_app/instruments/render/$id': typeof AppInstrumentsRenderIdRoute
  '/_app/admin/groups/': typeof AppAdminGroupsIndexRoute
  '/_app/admin/users/': typeof AppAdminUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/setup'
    | '/about'
    | '/contact'
    | '/dashboard'
    | '/user'
    | '/auth/login'
    | '/'
    | '/datahub/$subjectId'
    | '/admin/settings'
    | '/group/manage'
    | '/instruments/accessible-instruments'
    | '/session/start-session'
    | '/upload/$instrumentId'
    | '/datahub'
    | '/upload'
    | '/admin/groups/create'
    | '/admin/users/create'
    | '/datahub/$subjectId/assignments'
    | '/datahub/$subjectId/graph'
    | '/datahub/$subjectId/table'
    | '/instruments/render/$id'
    | '/admin/groups'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/setup'
    | '/about'
    | '/contact'
    | '/dashboard'
    | '/user'
    | '/auth/login'
    | '/'
    | '/datahub/$subjectId'
    | '/admin/settings'
    | '/group/manage'
    | '/instruments/accessible-instruments'
    | '/session/start-session'
    | '/upload/$instrumentId'
    | '/datahub'
    | '/upload'
    | '/admin/groups/create'
    | '/admin/users/create'
    | '/datahub/$subjectId/assignments'
    | '/datahub/$subjectId/graph'
    | '/datahub/$subjectId/table'
    | '/instruments/render/$id'
    | '/admin/groups'
    | '/admin/users'
  id:
    | '__root__'
    | '/_app'
    | '/setup'
    | '/_app/about'
    | '/_app/contact'
    | '/_app/dashboard'
    | '/_app/user'
    | '/auth/login'
    | '/_app/'
    | '/_app/datahub/$subjectId'
    | '/_app/admin/settings'
    | '/_app/group/manage'
    | '/_app/instruments/accessible-instruments'
    | '/_app/session/start-session'
    | '/_app/upload/$instrumentId'
    | '/_app/datahub/'
    | '/_app/upload/'
    | '/_app/admin/groups/create'
    | '/_app/admin/users/create'
    | '/_app/datahub/$subjectId/assignments'
    | '/_app/datahub/$subjectId/graph'
    | '/_app/datahub/$subjectId/table'
    | '/_app/instruments/render/$id'
    | '/_app/admin/groups/'
    | '/_app/admin/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  SetupRoute: typeof SetupRoute
  AuthLoginRoute: typeof AuthLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/setup': {
      id: '/setup'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof SetupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/user': {
      id: '/_app/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AppUserRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/contact': {
      id: '/_app/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof AppContactRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/upload/': {
      id: '/_app/upload/'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof AppUploadIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/datahub/': {
      id: '/_app/datahub/'
      path: '/datahub'
      fullPath: '/datahub'
      preLoaderRoute: typeof AppDatahubIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/upload/$instrumentId': {
      id: '/_app/upload/$instrumentId'
      path: '/upload/$instrumentId'
      fullPath: '/upload/$instrumentId'
      preLoaderRoute: typeof AppUploadInstrumentIdRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/session/start-session': {
      id: '/_app/session/start-session'
      path: '/session/start-session'
      fullPath: '/session/start-session'
      preLoaderRoute: typeof AppSessionStartSessionRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/instruments/accessible-instruments': {
      id: '/_app/instruments/accessible-instruments'
      path: '/instruments/accessible-instruments'
      fullPath: '/instruments/accessible-instruments'
      preLoaderRoute: typeof AppInstrumentsAccessibleInstrumentsRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/group/manage': {
      id: '/_app/group/manage'
      path: '/group/manage'
      fullPath: '/group/manage'
      preLoaderRoute: typeof AppGroupManageRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/admin/settings': {
      id: '/_app/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AppAdminSettingsRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/datahub/$subjectId': {
      id: '/_app/datahub/$subjectId'
      path: '/datahub/$subjectId'
      fullPath: '/datahub/$subjectId'
      preLoaderRoute: typeof AppDatahubSubjectIdRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/admin/users/': {
      id: '/_app/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AppAdminUsersIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/admin/groups/': {
      id: '/_app/admin/groups/'
      path: '/admin/groups'
      fullPath: '/admin/groups'
      preLoaderRoute: typeof AppAdminGroupsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/instruments/render/$id': {
      id: '/_app/instruments/render/$id'
      path: '/instruments/render/$id'
      fullPath: '/instruments/render/$id'
      preLoaderRoute: typeof AppInstrumentsRenderIdRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/datahub/$subjectId/table': {
      id: '/_app/datahub/$subjectId/table'
      path: '/table'
      fullPath: '/datahub/$subjectId/table'
      preLoaderRoute: typeof AppDatahubSubjectIdTableRouteImport
      parentRoute: typeof AppDatahubSubjectIdRouteRoute
    }
    '/_app/datahub/$subjectId/graph': {
      id: '/_app/datahub/$subjectId/graph'
      path: '/graph'
      fullPath: '/datahub/$subjectId/graph'
      preLoaderRoute: typeof AppDatahubSubjectIdGraphRouteImport
      parentRoute: typeof AppDatahubSubjectIdRouteRoute
    }
    '/_app/datahub/$subjectId/assignments': {
      id: '/_app/datahub/$subjectId/assignments'
      path: '/assignments'
      fullPath: '/datahub/$subjectId/assignments'
      preLoaderRoute: typeof AppDatahubSubjectIdAssignmentsRouteImport
      parentRoute: typeof AppDatahubSubjectIdRouteRoute
    }
    '/_app/admin/users/create': {
      id: '/_app/admin/users/create'
      path: '/admin/users/create'
      fullPath: '/admin/users/create'
      preLoaderRoute: typeof AppAdminUsersCreateRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/admin/groups/create': {
      id: '/_app/admin/groups/create'
      path: '/admin/groups/create'
      fullPath: '/admin/groups/create'
      preLoaderRoute: typeof AppAdminGroupsCreateRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppDatahubSubjectIdRouteRouteChildren {
  AppDatahubSubjectIdAssignmentsRoute: typeof AppDatahubSubjectIdAssignmentsRoute
  AppDatahubSubjectIdGraphRoute: typeof AppDatahubSubjectIdGraphRoute
  AppDatahubSubjectIdTableRoute: typeof AppDatahubSubjectIdTableRoute
}

const AppDatahubSubjectIdRouteRouteChildren: AppDatahubSubjectIdRouteRouteChildren =
  {
    AppDatahubSubjectIdAssignmentsRoute: AppDatahubSubjectIdAssignmentsRoute,
    AppDatahubSubjectIdGraphRoute: AppDatahubSubjectIdGraphRoute,
    AppDatahubSubjectIdTableRoute: AppDatahubSubjectIdTableRoute,
  }

const AppDatahubSubjectIdRouteRouteWithChildren =
  AppDatahubSubjectIdRouteRoute._addFileChildren(
    AppDatahubSubjectIdRouteRouteChildren,
  )

interface AppRouteRouteChildren {
  AppAboutRoute: typeof AppAboutRoute
  AppContactRoute: typeof AppContactRoute
  AppDashboardRoute: typeof AppDashboardRoute
  AppUserRoute: typeof AppUserRoute
  AppIndexRoute: typeof AppIndexRoute
  AppDatahubSubjectIdRouteRoute: typeof AppDatahubSubjectIdRouteRouteWithChildren
  AppAdminSettingsRoute: typeof AppAdminSettingsRoute
  AppGroupManageRoute: typeof AppGroupManageRoute
  AppInstrumentsAccessibleInstrumentsRoute: typeof AppInstrumentsAccessibleInstrumentsRoute
  AppSessionStartSessionRoute: typeof AppSessionStartSessionRoute
  AppUploadInstrumentIdRoute: typeof AppUploadInstrumentIdRoute
  AppDatahubIndexRoute: typeof AppDatahubIndexRoute
  AppUploadIndexRoute: typeof AppUploadIndexRoute
  AppAdminGroupsCreateRoute: typeof AppAdminGroupsCreateRoute
  AppAdminUsersCreateRoute: typeof AppAdminUsersCreateRoute
  AppInstrumentsRenderIdRoute: typeof AppInstrumentsRenderIdRoute
  AppAdminGroupsIndexRoute: typeof AppAdminGroupsIndexRoute
  AppAdminUsersIndexRoute: typeof AppAdminUsersIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAboutRoute: AppAboutRoute,
  AppContactRoute: AppContactRoute,
  AppDashboardRoute: AppDashboardRoute,
  AppUserRoute: AppUserRoute,
  AppIndexRoute: AppIndexRoute,
  AppDatahubSubjectIdRouteRoute: AppDatahubSubjectIdRouteRouteWithChildren,
  AppAdminSettingsRoute: AppAdminSettingsRoute,
  AppGroupManageRoute: AppGroupManageRoute,
  AppInstrumentsAccessibleInstrumentsRoute:
    AppInstrumentsAccessibleInstrumentsRoute,
  AppSessionStartSessionRoute: AppSessionStartSessionRoute,
  AppUploadInstrumentIdRoute: AppUploadInstrumentIdRoute,
  AppDatahubIndexRoute: AppDatahubIndexRoute,
  AppUploadIndexRoute: AppUploadIndexRoute,
  AppAdminGroupsCreateRoute: AppAdminGroupsCreateRoute,
  AppAdminUsersCreateRoute: AppAdminUsersCreateRoute,
  AppInstrumentsRenderIdRoute: AppInstrumentsRenderIdRoute,
  AppAdminGroupsIndexRoute: AppAdminGroupsIndexRoute,
  AppAdminUsersIndexRoute: AppAdminUsersIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  SetupRoute: SetupRoute,
  AuthLoginRoute: AuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
