name: open-data-capture
volumes:
  caddy_data:
services:
  caddy:
    image: caddy:2.7-alpine
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    environment:
      - SITE_ADDRESS
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
    profiles:
      - '' #load by default without having to specify docker compose --profile
      - gateway
      - fullstack
      - nogateway
  api:
    image: ghcr.io/douglasneuroinformatics/open-data-capture-api:${RELEASE_CHANNEL}
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      args:
        - RELEASE_VERSION
    depends_on:
      - mongo
    restart: unless-stopped
    environment:
      - GATEWAY_INTERNAL_NETWORK_URL=http://gateway:80
      - MONGO_REPLICA_SET=rs0
      - MONGO_RETRY_WRITES=true
      - MONGO_WRITE_CONCERN=majority
      - MONGO_DIRECT_CONNECTION=true
      - MONGO_URI=mongodb://mongo:27017
      - NODE_ENV=production
      - DANGEROUSLY_DISABLE_PBKDF2_ITERATION
      - DEBUG
      - GATEWAY_API_KEY
      - GATEWAY_ENABLED
      - GATEWAY_REFRESH_INTERVAL
      - GATEWAY_SITE_ADDRESS
      - SECRET_KEY
      - THROTTLER_ENABLED
      - VERBOSE
    expose:
      - 80
    profiles:
      - '' #load by default without having to specify docker compose --profile
      - fullstack
      - nogateway
  gateway:
    image: ghcr.io/douglasneuroinformatics/open-data-capture-gateway:${RELEASE_CHANNEL}
    build:
      args:
        - RELEASE_VERSION
      context: .
      dockerfile: ./apps/gateway/Dockerfile
    ports:
      - ${GATEWAY_PORT}:80
    expose:
      - 80
    profiles:
      - '' #load by default without having to specify docker compose --profile
      - gateway
      - fullstack
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - GATEWAY_API_KEY
    volumes:
      - ./sqlite:/app/sqlite
  web:
    image: ghcr.io/douglasneuroinformatics/open-data-capture-web:${RELEASE_CHANNEL}
    build:
      args:
        - RELEASE_VERSION
      context: .
      dockerfile: ./apps/web/Dockerfile
    environment:
      - API_BASE_URL=/api
      - CONTACT_EMAIL
      - DOCS_URL
      - GITHUB_REPO_URL
      - LICENSE_URL
      - GATEWAY_ENABLED
      - PLAUSIBLE_BASE_URL
      - PLAUSIBLE_WEB_DATA_DOMAIN
    expose:
      - 80
    profiles:
      - '' #load by default without having to specify docker compose --profile
      - fullstack
      - nogateway
    restart: unless-stopped
  mongo:
    image: mongo:${MONGODB_VERSION}
    command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
    expose:
      - 27017
    restart: unless-stopped
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'localhost:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - ./mongo/config:/data/configdb
      - ./mongo/data:/data/db
    profiles:
      - '' #load by default without having to specify docker compose --profile
      - fullstack
      - nogateway
  playground:
    build:
      context: .
      dockerfile: ./apps/playground/Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - '3750:80'
    restart: unless-stopped
    profiles:
      - fullstack
      - playground
      - nogateway
